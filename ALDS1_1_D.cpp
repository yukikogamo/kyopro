/*
<最大の利益>
FX取引では、異なる国の通貨を交換することで為替差の利益を得ることができます。
例えば、１ドル100円の時に 1000ドル買い、価格変動により 1ドル 108円になった時に売ると、
(108円 − 100円) × 1000ドル = 8000円の利益を得ることができます。
ある通貨について、時刻 t における価格 Rt (t=0,1,2,,,n−1)が入力として与えられるので、
価格の差 Rj−Ri (ただし、j>i とする) の最大値を求めてください。
*/

/*
<入力>
最初の行に整数 n が与えられます。
続く n 行に整数 Rt (t=0,1,2,,,n−1) が順番に与えられます。
*/

/*
<出力>
最大値を1行に出力してください。
*/

/*
<入力例1>
6
5
3
1
3
4
3
*/

/*
<入力例1に対する出力>
3
*/

/*
<入力例2>
3
4
3
2
*/

/*
<入力例2に対する出力>
-1
*/


#include <iostream>
#include <algorithm>
using namespace std;
static const int MAX = 200000;

int main () {
    int R[MAX], n;

    cin >> n;
    for ( int i = 0; i < n; i++ ) cin >> R[i];  //for が 1 から n-1 まで

    int maxv = -2000000000; //十分小さい値を初期値に設定
    int minv = R[0];

    for ( int i = 1; i < n; i++ ) { //ここで毎回 R[i] を読み込めば、配列は不要
      maxv = max(maxv, R[i] - minv);  //最大値を更新
      minv = min(minv, R[i]);         //ここまでの最小値を保持しておく
    }

    cout << maxv << endl;

    return 0;
}

